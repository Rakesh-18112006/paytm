// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  mobile    String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OnRampTransaction OnRampTransaction[]
  Balance  Balance[]
  sentTransfers  P2PTransfer[]  @relation( name : "FromUserRelation")
  receivedTranfers   P2PTransfer[] @relation( name: "ToUserRelation")
}

model P2PTransfer {
  id          Int @id @default(autoincrement())
  fromUserId  String
  toUserId   String
  fromUser   User @relation( name: "FromUserRelation" , fields: [ fromUserId] , references: [id])
  toUser    User @relation( name: "ToUserRelation" , fields: [ toUserId] , references: [id])
  timestamp  DateTime
  amount      Int

}
model OnRampTransaction {
  id         Int      @id @default(autoincrement())
  status     OnRampStatus
  token      String
  provider   String
  amount     Int
  startTime  DateTime
  userId     String       
  user       User      @relation(fields: [userId] , references: [id])
}  

enum OnRampStatus{
  processing
  failed
  success
}

model Balance{
  id      Int @unique @default(autoincrement())
  userId  String @unique
  amount  Int
  user    User @relation(fields: [userId] , references: [id])

}